package com.playing.lokasee;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.playing.lokasee.User;
import com.playing.lokasee.Event;
import com.playing.lokasee.Image;
import com.playing.lokasee.Location;
import com.playing.lokasee.Schedule;
import com.playing.lokasee.Ticket;

import com.playing.lokasee.UserDao;
import com.playing.lokasee.EventDao;
import com.playing.lokasee.ImageDao;
import com.playing.lokasee.LocationDao;
import com.playing.lokasee.ScheduleDao;
import com.playing.lokasee.TicketDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig eventDaoConfig;
    private final DaoConfig imageDaoConfig;
    private final DaoConfig locationDaoConfig;
    private final DaoConfig scheduleDaoConfig;
    private final DaoConfig ticketDaoConfig;

    private final UserDao userDao;
    private final EventDao eventDao;
    private final ImageDao imageDao;
    private final LocationDao locationDao;
    private final ScheduleDao scheduleDao;
    private final TicketDao ticketDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        eventDaoConfig = daoConfigMap.get(EventDao.class).clone();
        eventDaoConfig.initIdentityScope(type);

        imageDaoConfig = daoConfigMap.get(ImageDao.class).clone();
        imageDaoConfig.initIdentityScope(type);

        locationDaoConfig = daoConfigMap.get(LocationDao.class).clone();
        locationDaoConfig.initIdentityScope(type);

        scheduleDaoConfig = daoConfigMap.get(ScheduleDao.class).clone();
        scheduleDaoConfig.initIdentityScope(type);

        ticketDaoConfig = daoConfigMap.get(TicketDao.class).clone();
        ticketDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        eventDao = new EventDao(eventDaoConfig, this);
        imageDao = new ImageDao(imageDaoConfig, this);
        locationDao = new LocationDao(locationDaoConfig, this);
        scheduleDao = new ScheduleDao(scheduleDaoConfig, this);
        ticketDao = new TicketDao(ticketDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Event.class, eventDao);
        registerDao(Image.class, imageDao);
        registerDao(Location.class, locationDao);
        registerDao(Schedule.class, scheduleDao);
        registerDao(Ticket.class, ticketDao);
    }
    
    public void clear() {
        userDaoConfig.getIdentityScope().clear();
        eventDaoConfig.getIdentityScope().clear();
        imageDaoConfig.getIdentityScope().clear();
        locationDaoConfig.getIdentityScope().clear();
        scheduleDaoConfig.getIdentityScope().clear();
        ticketDaoConfig.getIdentityScope().clear();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public EventDao getEventDao() {
        return eventDao;
    }

    public ImageDao getImageDao() {
        return imageDao;
    }

    public LocationDao getLocationDao() {
        return locationDao;
    }

    public ScheduleDao getScheduleDao() {
        return scheduleDao;
    }

    public TicketDao getTicketDao() {
        return ticketDao;
    }

}
